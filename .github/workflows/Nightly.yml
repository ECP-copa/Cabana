name: Nightly
on:
  workflow_dispatch:
    inputs:
      cmake_args:
        description: 'Extra CMake args'
      ctest_args:
        description: 'Extra CTest args'
  schedule:
    - cron:  '0 1 * * *'

jobs:
  CI:
    strategy:
      matrix:
        backend: ["OPENMP", "SERIAL"]
        distro: ['ubuntu:latest', 'fedora:rawhide']
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    container:
      image: ghcr.io/ecp-copa/ci-containers/${{ matrix.distro }}
    steps:
      - name: Checkout kokkos
        uses: actions/checkout@v3
        with:
          repository: kokkos/kokkos
          ref: develop
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=$HOME/kokkos -DKokkos_ENABLE_${{ matrix.backend }}=ON  -DKokkos_ENABLE_DEPRECATED_CODE_3=OFF
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout arborx
        uses: actions/checkout@v3
        with:
          repository: arborx/ArborX
          ref: master
          path: arborx
      - name: Build arborx
        working-directory: arborx
        run: |
          cmake -B build -DCMAKE_PREFIX_PATH=${HOME}/kokkos -DCMAKE_INSTALL_PREFIX=$HOME/arborx
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v3
      - name: Build Cabana
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=$HOME/Cabana -DCMAKE_PREFIX_PATH="$HOME/kokkos;$HOME/arborx" -DCabana_ENABLE_TESTING=ON -DCabana_ENABLE_EXAMPLES=ON -DCabana_REQUIRE_${{ matrix.backend }}=ON -DVALGRIND_EXECUTABLE=False ${{ github.event.inputs.cmake_args }}
          cmake --build build --parallel 2
          ctest --test-dir build --output-on-failure  ${{ github.event.inputs.ctest_args }}
          cmake --install build
