name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 3 * * *'

jobs:
  CI:
    # FIXME: remove failing distributions here when passing
    continue-on-error: ${{ matrix.kokkos_ver == 'develop' || matrix.distro == 'fedora:intel' }}
    defaults:
      run:
        shell: bash
    env:
      CCACHE_DIR: "${{ github.workspace }}/.ccache"
      CCACHE_MAXSIZE: "10G"
      CCACHE_CPP2: "true"
    strategy:
      matrix:
        distro: ['ubuntu:latest']
        cxx: ['g++', 'clang++']
        openmp: ['ON', 'OFF']
        cmake_build_type: ['Debug', 'Release']
        kokkos_ver: ['3.2.01', 'master', 'develop']
        arborx: ['NoArborX']
        heffte: ['NoheFFTe' ]
        hypre: ['NoHYPRE']
        coverage: ['OFF']
        include:
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'ON'
            cmake_build_type: 'Debug'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'OFF'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'OFF'
            cmake_build_type: 'Debug'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'fedora:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
            doxygen: 'ON'
          - distro: 'fedora:latest'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'opensuse:latest'
            cxx: 'g++'
            cmake_build_type: 'Release'
            openmp: 'ON'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'opensuse:latest'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'ubuntu:rolling'
            cxx: 'g++'
            cmake_build_type: 'Release'
            openmp: 'ON'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'ubuntu:rolling'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'fedora:rawhide'
            cxx: 'g++'
            cmake_build_type: 'Release'
            openmp: 'ON'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'fedora:rawhide'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'ArborX'
            heffte: 'NoheFFTe'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'heFFTe_FFTW'
            hypre: 'NoHYPRE'
            coverage: 'OFF'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Debug'
            kokkos_ver: 'master'
            arborx: 'NoArborX'
            heffte: 'NoheFFTe'
            hypre: 'HYPRE'
            coverage: 'ON'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Debug'
            kokkos_ver: 'master'
            arborx: 'ArborX'
            heffte: 'heFFTe_FFTW'
            hypre: 'HYPRE'
            coverage: 'ON'
    runs-on: ubuntu-20.04
    container: ghcr.io/ecp-copa/ci-containers/${{ matrix.distro }}
    steps:
      - name: Get trail license
        if: ${{ matrix.cxx == 'icpc' }}
        run: |
          mkdir ~/Licenses
          curl https://dynamicinstaller.intel.com/api/v2/license > ~/Licenses/intel.lic
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.distro }}-${{github.run_id}}
          restore-keys: ccache-${{ matrix.distro }}
      - name: Zero ccache stats
        run: |
          ccache -z
      - name: Checkout kokkos
        uses: actions/checkout@v2.2.0
        with:
          repository: kokkos/kokkos
          ref: ${{ matrix.kokkos_ver }}
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/kokkos \
            -DKokkos_ENABLE_OPENMP=${{ matrix.openmp }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DKokkos_ENABLE_HWLOC=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout arborx
        if: ${{ matrix.arborx == 'ArborX' }}
        uses: actions/checkout@v2.2.0
        with:
          repository: arborx/ArborX
          ref: master
          path: arborx
      - name: Build arborx
        if: ${{ matrix.arborx == 'ArborX' }}
        working-directory: arborx
        run: |
          cmake -B build \
            -DCMAKE_PREFIX_PATH=${HOME}/kokkos \
            -DCMAKE_INSTALL_PREFIX=$HOME/arborx \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout heffte
        if: ${{ matrix.heffte != 'NoheFFTe' }}
        # actions/checkout doesn't work for external repos yet
        run: |
          git clone --depth 1 --branch v2.0.0 https://bitbucket.org/icl/heffte.git heffte
      - name: Build heffte
        if: ${{ matrix.heffte != 'NoheFFTe' }}
        working-directory: heffte
        run: |
          [[ ${{ matrix.heffte }} == "heFFTe_FFTW" ]] && heffte_cmake_opts+=( -DHeffte_ENABLE_FFTW=ON )
          [[ ${{ matrix.heffte }} == "heFFTe_MKL" ]] && heffte_cmake_opts+=( -DHeffte_ENABLE_MKL=ON )
          cmake -B build \
            -DCMAKE_CXX_STANDARD="11" \
            -DBUILD_SHARED_LIBS=ON \
            -DMKL_ROOT=/opt/intel/mkl \
            -DCMAKE_INSTALL_PREFIX=$HOME/heffte \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            ${heffte_cmake_opts}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout hypre
        if: ${{ matrix.hypre == 'HYPRE' }}
        uses: actions/checkout@v2.2.0
        with:
          repository: hypre-space/hypre
          ref: v2.22.0
          path: hypre
      - name: Build hypre
        if: ${{ matrix.hypre == 'HYPRE' }}
        working-directory: hypre/src
        run: |
          [[ ${{ matrix.openmp }} == 'ON' ]] && hypre_cmake_opts+=( -DHYPRE_WITH_OPENMP=ON )
          cmake -B build \
            -DHYPRE_INSTALL_PREFIX=$HOME/hypre \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DHYPRE_WITH_MPI=ON \
            ${hypre_cmake_opts}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v2.2.0
      - name: Build Cabana
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/Cabana \
            -DMPIEXEC_MAX_NUMPROCS=2 -DMPIEXEC_PREFLAGS="--oversubscribe" \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos;$HOME/arborx;$HOME/heffte;$HOME/hypre" \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic -Werror" \
            -DCabana_ENABLE_TESTING=ON \
            -DCabana_ENABLE_EXAMPLES=ON \
            -DCabana_ENABLE_PERFORMANCE_TESTING=ON \
            -DCabana_PERFORMANCE_EXPECTED_FLOPS=0 \
            -DCabana_ENABLE_COVERAGE_BUILD=${{ matrix.coverage }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DDOXYGEN_WARN_AS_ERROR=FAIL_ON_WARNINGS
          cmake --build build --parallel 2
          CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --target test
          cmake --install build
      - name: Test Cabana Export Target
        working-directory: example/core_tutorial/01_hello_world
        run: |
          cmake -B build \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos;$HOME/arborx;$HOME/heffte;$HOME/hypre;$HOME/Cabana" \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
          cmake --build build
      - name: Build Doxygen
        if: ${{ matrix.doxygen == 'ON' }}
        run: cmake --build build --target doxygen
      - name: Show ccache stats
        run: |
          ccache -s
      - name: Format Cabana
        if: ${{ matrix.distro == 'ubuntu:latest' }}
        working-directory: build
        run: |
             make format
             git diff --exit-code
      - name: Upload Report to codecov.io
        if: ${{ matrix.coverage == 'ON' }}
        uses: codecov/codecov-action@v1
      - name: Checkout gh-pages
        if: ${{ matrix.doxygen == 'ON' }}
        uses: actions/checkout@v2
        with:
          ref: 'gh-pages'
          path: 'html'
      - name: update and commit to gh-pages branch
        if: ${{ matrix.doxygen == 'ON' }}
        working-directory: html
        run: |
          rm -rf doxygen
          mv ../build/html doxygen
          git config --global user.name "Automatic Deployment (GitHub Action)";
          git config --global user.email "noreply@lanl.gov"
          git add --all
          git diff --quiet HEAD || git commit -m "Documentation Update"
          if [[ "${GITHUB_REF}" == 'refs/heads/master' ]]; then
            git push
          else
            git show
          fi
