language: cpp

dist: focal

stages:
  - canary
  - test

jobs:
    include:
        - stage: canary
          env: BACKENDS="OPENMP" WERROR=ON

env:
  global:
    - CCACHE_CPP2=yes # for clang
  matrix: # note this matrix only applies to the "test" stage
    - BACKENDS="OPENMP" WERROR=ON CMAKE_BUILD_TYPE=Release
    - BACKENDS="SERIAL" WERROR=ON CMAKE_BUILD_TYPE=Release
    - BACKENDS="PTHREAD" WERROR=ON CMAKE_BUILD_TYPE=Release
    - BACKENDS="SERIAL" WERROR=ON CMAKE_BUILD_TYPE=Release ARBORX=ON
    - BACKENDS="OPENMP" WERROR=ON CMAKE_BUILD_TYPE=Release ARBORX=ON
    - BACKENDS="OPENMP" WERROR=ON CMAKE_BUILD_TYPE=Release HEFFTE=ON
    - BACKENDS="SERIAL OPENMP" WERROR=ON CMAKE_BUILD_TYPE=Release
    - BACKENDS="SERIAL PTHREAD" WERROR=ON CMAKE_BUILD_TYPE=Release
    - BACKENDS="OPENMP" COVERAGE=ON CMAKE_BUILD_TYPE=Debug
    - BACKENDS="SERIAL" COVERAGE=ON CMAKE_BUILD_TYPE=Debug
    - BACKENDS="PTHREAD" COVERAGE=ON CMAKE_BUILD_TYPE=Debug
    - BACKENDS="SERIAL OPENMP" COVERAGE=ON CMAKE_BUILD_TYPE=Debug
    - BACKENDS="SERIAL PTHREAD" COVERAGE=ON CMAKE_BUILD_TYPE=Debug

before_script:
  - ccache -z
  - KOKKOS_OPTS=( -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DKokkos_ENABLE_HWLOC=ON -DKokkos_CXX_STANDARD=14)
  - for i in ${BACKENDS}; do KOKKOS_OPTS+=( -DKokkos_ENABLE_${i^^}=ON ); done
    # LD_LIBRARY_PATH workaround for libomp: https://github.com/travis-ci/travis-ci/issues/8613
  - if [[ ${CC} = clang ]]; then export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH; fi
  - git clone --depth=1 --branch 3.2.00 https://github.com/kokkos/kokkos.git &&
    pushd kokkos &&
    mkdir build &&
    pushd build &&
    cmake -DCMAKE_INSTALL_PREFIX=$HOME/kokkos ${KOKKOS_OPTS[@]} .. &&
    make -j2 &&
    make install &&
    popd &&
    popd
  - for i in ${BACKENDS}; do CMAKE_OPTS+=( -DCabana_REQUIRE_${i}=ON ); done
  - if [[ ${ARBORX} ]];  then
      git clone --depth=1 https://github.com/arborx/ArborX.git &&
      pushd ArborX && mkdir build && pushd build &&
      cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
            -DCMAKE_PREFIX_PATH=${HOME}/kokkos
            -DCMAKE_INSTALL_PREFIX=${HOME}/ArborX .. &&
      make -j2 VERBOSE=1 && make install &&
      popd && popd;
    fi
  - if [[ ${HEFFTE} ]]; then
       git clone --depth=1 --branch v2.0.0 https://bitbucket.org/icl/heffte.git &&
       pushd heffte && mkdir build && pushd build &&
       cmake -DCMAKE_INSTALL_PREFIX="$HOME/heffte"
          -DCMAKE_CXX_STANDARD="11"
          -DBUILD_SHARED_LIBS=ON
          -DHeffte_ENABLE_FFTW=ON .. &&
       make -j2 VERBOSE=1 && make install &&
       popd && popd;
    fi
  - if [[ ${COVERAGE} ]]; then
       pip install --user coverxygen &&
       mkdir -p $HOME/.local/bin && wget -O $HOME/.local/bin/codecov https://codecov.io/bash && chmod +x $HOME/.local/bin/codecov;
     fi

addons:
  apt:
    packages:
      - doxygen
      - libhwloc-dev
      - openmpi-bin
      - libopenmpi-dev
      - libgsl0-dev
      - libfftw3-dev
      - python3-pip
      - clang-format

script:
  - export CXXFLAGS="-Wall -Wextra -pedantic ${WERROR:+-Werror}"
  - export FFLAGS="-Wall -Wextra -pedantic ${WERROR:+-Werror}"
  - mkdir build && pushd build &&
    cmake -DCMAKE_INSTALL_PREFIX="$HOME/cabana"
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCMAKE_PREFIX_PATH="$HOME/kokkos;$HOME/ArborX;$HOME/heffte"
          -DCabana_REQUIRE_SERIAL=OFF ${CMAKE_OPTS[@]}
          -DCabana_REQUIRE_MPI=ON -DCabana_REQUIRE_ARBORX=${ARBORX}
          -DCabana_REQUIRE_HEFFTE=${HEFFTE}
          -DCabana_ENABLE_TESTING=ON -DCabana_ENABLE_EXAMPLES=ON
          -DDOXYGEN_WARN_AS_ERROR=ON -DDOXYGEN_GENERATE_XML=ON -DDOXYGEN_WARN_IF_UNDOCUMENTED=OFF
          -DMPIEXEC_MAX_NUMPROCS=2 -DMPIEXEC_PREFLAGS="--oversubscribe"
          -DCLANG_FORMAT_EXECUTABLE=/usr/bin/clang-format
          ${CMAKE_BUILD_TYPE:+-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}}
          -DCabana_ENABLE_PERFORMANCE_TESTING=ON -DCabana_PERFORMANCE_EXPECTED_FLOPS=0
          ${COVERAGE:+-DCabana_ENABLE_COVERAGE_BUILD=ON -DCOMPILER_SUPPORTS_MARCH=OFF} .. &&
    make -k -j2 VERBOSE=1 &&
    make test CTEST_OUTPUT_ON_FAILURE=1 &&
    make format && git diff --exit-code &&
    make doxygen &&
    make install DESTDIR=${PWD}/install && rm -rf ${PWD}/install/$HOME/cabana && rmdir ${PWD}/install/$HOME &&
    make install &&
    popd &&
    pushd example/tutorial/01_hello_world &&
    mkdir build && pushd build &&
    cmake -DCMAKE_PREFIX_PATH="$HOME/cabana;$HOME/kokkos" .. &&
    make -k -j2 VERBOSE=1 &&
    popd &&
    popd

after_success:
 - ccache -s
 - test "${TRAVIS_BUILD_STAGE_NAME}" = "test" || travis_terminate 0
 - if [[ ${COVERAGE} ]]; then
     pushd build &&
     if [[ ${CC} = clang ]]; then
       codecov -x "llvm-cov gcov" -F "${CC}";
     else
       codecov -x gcov-6 -F "${CC}";
     fi &&
     python -m coverxygen --src-dir .. --xml-dir xml/ --output doxygen.coverage.info && codecov -F doxygen -X gcov -f doxygen.coverage.info &&
     popd;
   fi
 - if [[ ${TRAVIS_JOB_NUMBER} = *.2 ]]; then
     git fetch origin gh-pages && git checkout -b gh-pages FETCH_HEAD &&
     rm -rf doxygen &&
     mv build/html doxygen &&
     git add --all doxygen &&
     if [[ ${TRAVIS_BRANCH} = master && ${encrypted_de2ca53a1b69_key} && ${encrypted_de2ca53a1b69_iv} && ${TRAVIS_PULL_REQUEST} == false ]]; then
       git config --global user.name "Automatic Deployment (Travis CI)" &&
       git config --global user.email "noreply@lanl.gov" &&
       git commit -m "Documentation Update" &&
       openssl aes-256-cbc -K $encrypted_de2ca53a1b69_key -iv $encrypted_de2ca53a1b69_iv -in deploy.enc -out ~/.ssh/id_rsa -d &&
       chmod 600 ~/.ssh/id_rsa &&
       git push git@github.com:${TRAVIS_REPO_SLUG} gh-pages:gh-pages;
     else
       git status &&
       git diff --cached --no-color | head -n 500;
     fi;
   fi

branches:
  only:
  - master

cache:
  - ccache

compiler:
  - gcc
  - clang
